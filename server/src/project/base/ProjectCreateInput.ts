/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ScheduleCreateNestedManyWithoutProjectsInput } from "./ScheduleCreateNestedManyWithoutProjectsInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsNumber,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import { RateWhereUniqueInput } from "../../rate/base/RateWhereUniqueInput";
@InputType()
class ProjectCreateInput {
  @ApiProperty({
    required: false,
    type: () => ScheduleCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => ScheduleCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => ScheduleCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  agendas?: ScheduleCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  groups?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  Hours?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RateWhereUniqueInput)
  @IsOptional()
  @Field(() => RateWhereUniqueInput, {
    nullable: true,
  })
  rate?: RateWhereUniqueInput | null;
}
export { ProjectCreateInput };
